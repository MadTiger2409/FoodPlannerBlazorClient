@inherits TypeaheadBaseComponent<NewProductComponentViewModel>

@page "/products/new"

<ResponseStatusComponent T=@Domain.Entities.Product.Product
                        Response=@ViewModel.Response
                        SuccessMessage="Product added successfully"
                        ShowDetailsInformation=@showDetailsInformation/>

<div class="card">
    <h5 class="card-header">Add product</h5>
    <div class="card-body">
        <EditForm Model="_createProductModel" OnValidSubmit="OnValidSubmitAsync">
            <FluentValidationValidator />

            <div class="mb-3">
                <label for="productNameText" class="form-label">Name</label>
                <InputText id="productNameText" class="form-control" placeholder="Provide the name..." @bind-Value="_createProductModel.Name" />
                <ValidationMessage For="() => _createProductModel.Name" />
            </div>

            <div class="mb-3">
                <label for="categorySelector" class="form-label">Category</label>
                <BlazoredTypeahead id="categorySelector" placeholder="Search by name..."
                                   SearchMethod="SearchCategoriesAsync"
                                   ConvertMethod="ConvertEntityToId<Domain.Entities.Category.Category>"
                                   EnableDropDown="true"
                                   MaximumSuggestions="ViewModel.Categories.Count"
                                   @bind-Value="_createProductModel.CategoryId">
                    <SelectedTemplate Context="categoryId">
                        @{
                            var selectedCategory = LoadSelectedEntity<Domain.Entities.Category.Category>(categoryId, ViewModel.Categories);

                            <text>@selectedCategory.Name</text>
                        }
                    </SelectedTemplate>
                    <ResultTemplate Context="meal">
                        @meal.Name
                    </ResultTemplate>
                </BlazoredTypeahead>
                <ValidationMessage For="() => _createProductModel.CategoryId" />
            </div>

            <button type="submit" class="btn btn-success">Send</button>
        </EditForm>
    </div>
</div>