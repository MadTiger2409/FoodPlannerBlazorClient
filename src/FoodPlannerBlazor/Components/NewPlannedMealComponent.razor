@page "/plannedMeals/new"

@if (showDetailsInformation)
{
    <div class="card">
        @if (ViewModel.Response.Success)
        {
            <h5 class="card-header">Success</h5>
            <div class="card-body">
                <p class="details-success">Meal planned successfully</p>
                <button class="btn btn-warning" @onclick="() => { showDetailsInformation = false; }">Dismiss</button>
            </div>
        }
        else
        {
            <h6 class="card-header">@ViewModel.Response.Error.Title</h6>
            <div class="card-body">
                <ul>
                    @foreach (var detail in ViewModel.Response.Error.Details)
                    {
                        <li class="details-fail">@detail</li>
                    }
                </ul>
                <button class="btn btn-warning" @onclick="() => { showDetailsInformation = false; }">Dismiss</button>
            </div>
        }
    </div>
    <br />
}

<div class="card">
    <div class="card-body">
        <EditForm Model="formModel" OnValidSubmit="OnValidSubmitAsync">
            <FluentValidationValidator />

            <div class="mb-3">
                <label for="mealSelector" class="form-label">Meal</label>
                <BlazoredTypeahead id="mealSelector" placeholder="Search by name..."
                                   SearchMethod="SearchMealsAsync"
                                   ConvertMethod="@ConvertMeal"
                                   EnableDropDown="true"
                                   MaximumSuggestions="ViewModel.Meals.Count"
                                   @bind-Value="formModel.MealId">
                    <SelectedTemplate Context="mealId">
                        @{
                            var selectedMeal = LoadSelectedMeal(mealId);

                            <text>@selectedMeal.Name</text>
                        }
                    </SelectedTemplate>
                    <ResultTemplate Context="meal">
                        @meal.Name
                    </ResultTemplate>
                </BlazoredTypeahead>
                <ValidationMessage For="() => formModel.MealId" />
            </div>

            <div class="mb-3">
                <label for="ordinalNumber" class="form-label">Ordinal number</label>
                <InputNumber min="1" max="255" id="ordinalNumber" class="form-control" @bind-Value="formModel.OrdinalNumber" />
                <ValidationMessage For="() => formModel.OrdinalNumber" />
            </div>

            <div class="mb-3">
                <label for="forDate" class="form-label">Scheduled for</label>
                <InputDate id="forDate" class="form-control" @bind-Value="formModel.ScheduledFor" />
                <ValidationMessage For="() => formModel.ScheduledFor" />
            </div>

            <button type="submit" class="btn btn-success">Send</button>
        </EditForm>
    </div>
</div>