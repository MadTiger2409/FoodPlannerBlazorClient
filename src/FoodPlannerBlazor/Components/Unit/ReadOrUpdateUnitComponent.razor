@inherits BaseComponent<ReadOrUpdateUnitComponentViewModel>

@page "/units/{id:int}"

<ResponseStatusComponent T=@Domain.Entities.Unit.Unit
                        Response=@ViewModel.UpdateUnitResponse
                        SuccessMessage="Unit updated successfully"
                        @bind-ShowDetailsInformation=@showDetailsInformation/>

<div class="card">
    @if (ViewModel.GetUnitResponse.Success == false)
    {
        <h5 class="card-header">@ViewModel.GetUnitResponse.Error.Title</h5>
        <div class="card-body">
            <ul>
                @foreach (var detail in ViewModel.GetUnitResponse.Error.Details)
                {
                    <li>@detail</li>
                }
            </ul>
        </div>
    }
    else
    {
        <h5 class="card-header">Update unit</h5>
        <div class="card-body">
            <EditForm Model="_updateUnitModel" OnValidSubmit="OnValidSubmitAsync">
                <FluentValidationValidator />
                <fieldset disabled="@_disabled">
                    <div class="mb-3">
                        <label for="categoryNameText" class="form-label">Name</label>
                        <InputText id="categoryNameText" class="form-control" placeholder="Provide the name..." @bind-Value="_updateUnitModel.Name" />
                        <ValidationMessage For="() => _updateUnitModel.Name" />
                    </div>
                </fieldset>

                <button type="submit" class="btn btn-success" disabled="@_disabled">Send</button>
                <button type="button" class="btn @_editButtonClass card-link" @onclick="ToggleEdit">@_editButtonValue</button>
            </EditForm>
        </div>
    }
</div>